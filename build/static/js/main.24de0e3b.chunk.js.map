{"version":3,"sources":["common/img/account.svg","common/img/add.svg","common/img/title.svg","common/img/person.svg","common/img/time.svg","common/img/location.svg","common/img/404.svg","redux/actions.js","redux/actionTypes.js","routers/router.js","common/utils/util.js","components/Loading/Loading.js","leanCode.js","fetch/fetch.js","fetch/Api.js","pages/Home/Home.js","common/utils/fixModalTouchBGScroll.js","pages/Login/Login.js","pages/Detail/Detail.js","pages/Account/Account.js","pages/Create/Create.js","routers/router.config.js","pages/Error/Error.js","routers/index.js","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js","common/img/logo.svg","common/img/back.svg"],"names":["module","exports","__webpack_require__","p","setLoginStatus","loginStatus","type","payload","updateUserInfo","userInfo","updateToDoListInfo","toDoListInfo","setRefreshHome","refreshHome","Routes","console","log","this","props","timer","Date","now","dispatchLoginStatue","localStorage","setItem","JSON","stringify","Object","objectSpread","_this$props","location","config","pathname","targetRouterConfig","find","router","path","auth","component","react_default","a","createElement","Route","exact","Redirect","to","Component","connect","state","dispatch","dispatchUserInfo","status","addZero","value","val","concat","length","util","telephoneVerfication","telephone","test","idCardVerfication","id","timeStampChangeDate","timeStamp","date","year","getFullYear","month","getMonth","date_","getDate","hour","getHours","minutes","getMinutes","dateChangeTimeStamp","parse","Loading","className","leanCode","APP_ID","AV","Query","User","APP_KEY","init","appId","appKey","limitNum","instance","_callee","_ref","method","res","regenerator_default","wrap","_context","prev","next","sent","abrupt","t0","message","indexOf","toast_default","info","error","stop","_callee2","_ref4","userId","_ref4$searchTitle","searchTitle","_ref4$pageNo","pageNo","skipNum","query","count","pageObj","list","_context2","equalTo","contains","limit","skip","totalPage","Math","ceil","_callee3","todoCount","completeCount","_context3","Api","login","_ref2","username","password","logIn","getToDoList","signup","_ref3","user","setUsername","setPassword","signUp","addTodo","_ref5","content","person","time","title","toDoList","extend","set","save","getEventCount","getEventDetail","_ref6","eventId","completeEvent","todo","createWithoutData","deleteEvent","destroy","logout","logOut","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","dataSource","list_view_default","DataSource","getRowData","dataBlob","sectionID","rowID","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","modalVisible","data","scroller","posY","scrollY","maxscroll","isIosModalVisible","navigator","userAgent","document","body","style","overflow","querySelectorAll","addEventListener","e","el","selector","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","parentElement","closest","target","touches","pageY","scrollTop","scrollHeight","clientHeight","passive","preventDefault","distanceY","FixModalTouchBGScroll","setState","cloneWithRowsAndSections","S0, R0","Section 0","dispatchToDoListInfo","dispatchRefreshHome","getItem","_res$pageObj","forEach","item","_item$attributes","attributes","createTime","Util","obj","assign","push","history","searchWord","undefined","_this2","lib","zIndex","search_bar_default","ref","autoFocusInst","placeholder","cancelText","onClear","searchEvent","bind","onSubmit","_this3","onClick","src","Add","alt","testModal","Account","modal_default","visible","transparent","maskClosable","onClose","footer","text","onPress","height","_this$props$toDoListI2","components_Loading_Loading","_this4","map","key","backgroundColor","_this$props$toDoListI3","_this5","lv","renderSectionWrapper","renderSectionHeader","renderSectionHeaderTemplate","renderHeader","cardTemplate","renderFooter","renderFooterTemplate","renderRow","renderRowTemplate","onScroll","onScrollHandle","onEndReached","pageSize","scrollEventThrottle","onEndReachedThreshold","useBodyScroll","isRefresh","Login","form","validateFields","asyncToGenerator","mark","_username","fail","removeItem","_x2","_x3","apply","arguments","getFieldProps","Logo","list_default","input_item_default","rules","required","maxLength","button_default","activeClassName","createForm","Detail","eventDetail","window","href","split","_res$","_res$$attributes","createdAt","updatedAt","limitTime","updateTime","success","goBackToHome","Back","logoutStatus","Avatar","disabled","Create","pageLoading","UTCTime","_x","Title","Person","date_picker_default","Item","arrow","Time","Place","textarea_item_default","rows","pageLoadingTemplate","routerConfig","Error","ErrorIcon","Routers","BrowserRouter","Switch","App","routers","Boolean","hostname","match","initState","store","createStore","action","ReactDOM","render","es","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24de0e3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/account.74325722.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.a8e1ea22.svg\";","module.exports = __webpack_public_path__ + \"static/media/title.26018783.svg\";","module.exports = __webpack_public_path__ + \"static/media/person.94d6b2da.svg\";","module.exports = __webpack_public_path__ + \"static/media/time.2ddfb7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.0df9a860.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.ccee8dac.svg\";","import { SET_LOGIN_STATUS, UPDATE_USER_INFO, UPDATE_TO_DO_LIST_INFO, SET_REFRESH_HOME } from './actionTypes';\n\nexport const setLoginStatus = loginStatus => ({ \n    type: SET_LOGIN_STATUS, \n    payload: loginStatus,\n});\n\nexport const updateUserInfo = userInfo => ({ \n    type: UPDATE_USER_INFO,\n    payload: userInfo,\n});\n\nexport const updateToDoListInfo = toDoListInfo => ({\n    type: UPDATE_TO_DO_LIST_INFO,\n    payload: toDoListInfo,\n});\n\nexport const setRefreshHome = refreshHome => ({\n    type: SET_REFRESH_HOME, \n    payload: refreshHome,\n});","export const SET_LOGIN_STATUS = 'SET_LOGIN_STATUS';\n\nexport const UPDATE_USER_INFO = 'UPDATE_USER_INFO';\n\nexport const UPDATE_TO_DO_LIST_INFO = 'UPDATE_TO_DO_LIST_INFO';\n\nexport const SET_REFRESH_HOME = 'SET_REFRESH_HOME';\n\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { updateUserInfo, setLoginStatus } from '../redux/actions';\n\nclass Routes extends Component{\n    async componentWillMount() {\n        console.log('hi');\n        if(this.props.userInfo.timer - Date.now() > 1000 * 60 * 60 * 24 * 15) {\n            this.props.dispatchLoginStatue(false);\n        } else {\n            // update timer\n            localStorage.setItem('userInfo', JSON.stringify({...this.props.userInfo, timer: Date.now()}));\n        }\n    }\n    render() {\n        const { location, config, loginStatus } = this.props;\n        const { pathname } = location;\n\n        console.log('config', config);\n\n        // 如果该路由不用进行权限校验，登录状态下登陆页除外\n        // 因为登陆后，无法跳转到登陆页\n        // 这部分代码，是为了在非登陆状态下，访问不需要权限校验的路由\n        const targetRouterConfig = config.find((router) => {\n            console.log('router', router);\n            return router.path === pathname\n        });\n\n        console.log('targetRouterConfig', targetRouterConfig);\n\n        if(targetRouterConfig && !targetRouterConfig.auth && !loginStatus){\n            const { component } = targetRouterConfig;\n            return <Route exact path={pathname} component={component} />\n        }\n\n\n        console.log('loginStatus', loginStatus);\n        if(loginStatus){\n            // 如果是登陆状态，想要跳转到登陆，重定向到主页\n            if(pathname === '/login'){\n                return <Redirect to='/' />\n            } else {\n                // 如果路由合法，就跳转到相应的路由\n                if(targetRouterConfig){\n                    return <Route path={pathname} component={targetRouterConfig.component} />\n                } else {\n                    // 如果路由不合法，重定向到 404 页面\n                    return <Redirect to='/error' />\n                }\n            }\n        } else {\n            // 非登陆状态下，当路由合法时且需要权限校验时，跳转到登陆页面，要求登陆\n            if(targetRouterConfig && targetRouterConfig.auth){\n                return <Redirect to='/login' />\n            }else{\n                // 非登陆状态下，路由不合法时，重定向至 404\n                return <Redirect to='/error' />\n            }\n        }\n    }\n}\n\nfunction mapStateToProps(state){\n    let { loginStatus, userInfo } = state;\n    return {\n        loginStatus,\n        userInfo,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatchUserInfo: (userInfo) => {\n            return dispatch(updateUserInfo(userInfo))\n        },\n        dispatchLoginStatue: (status) => {\n            return dispatch(setLoginStatus(status));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);","function addZero(value) {\n    let val = value;\n    if(`${val}`.length === 1) {\n        val = `0${val}`;\n    }\n    return val;\n}\n\nconst util = {\n    telephoneVerfication(telephone) {\n        return /^1[3|4|5|7|8]\\d{9}$/.test(telephone);\n    },\n    idCardVerfication(id) {\n        return /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/.test(id);\n    },\n    timeStampChangeDate(timeStamp) {\n        let date = new Date(timeStamp);\n        let year = date.getFullYear();\n        let month = addZero(date.getMonth() + 1);\n        let date_ = addZero(date.getDate());\n        let hour = addZero(date.getHours());\n        let minutes = addZero(date.getMinutes());\n        return `${year}-${month}-${date_} ${hour}:${minutes}`;\n    },\n\n    dateChangeTimeStamp(date) {\n        return Date.parse(date);\n    }\n}\n\nexport default util;","import React, { Component } from 'react';\n\nimport './Loading.scss';\n\nclass Loading extends Component {\n    render() {\n        return (\n            <div className=\"loading\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        )\n    }\n}\n\nexport default Loading;","const APP_ID = '5CW35y2KTJYTv0KNyOroNiSX-gzGzoHsz';\nconst APP_KEY = '8ANucFphKiNKO7BviHBBDCyl';\n\n\n\nexport default {\n    APP_ID,\n    APP_KEY,\n}","import AV from 'leancloud-storage';\n\n// 注意：需要自己创建一个 leanCode.js 文件，其中导出 APP_ID 和 APP_KEY 即可\nimport leanCode from '../leanCode.js';\n\nconst { Query, User } = AV;\nconst {APP_ID, APP_KEY} = leanCode;\n\nAV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n});\n\n\nexport default AV;","import { Toast } from 'antd-mobile';\n\nimport AV from './fetch';\n\nconst { Query, User } = AV;\nconst limitNum = 10;\n\nasync function instance({method}) {\n    try {\n        const res = await method;\n        return res;\n    } catch (error) {\n        if(error.message.indexOf('Username has already been taken.') >= 0) {\n            Toast.info('用户名已经被占用', 2);\n        } else {\n            console.error('api error', error.message);\n        }\n    }\n}\n\nfunction login({username, password}) {\n    return instance({method: User.logIn(username, password)});\n}\n\nfunction signup({username, password}) {\n    let user = new AV.User();\n    user.setUsername(username);\n    user.setPassword(password);\n    return instance({method: user.signUp()});\n}\n\nasync function getToDoList({userId, searchTitle = '', pageNo = 1}) {\n    let skipNum = (pageNo - 1) * limitNum;\n    let query = new AV.Query('ToDoList');\n    query.equalTo('userId', userId);\n    query.contains('title', searchTitle);\n    query.limit(limitNum);\n    query.skip(skipNum);\n    let count = await instance({method: query.count()});\n    let pageObj = {\n        count,\n        pageNo,\n        totalPage: Math.ceil(count/limitNum),\n    }\n    let list = await instance({method: query.find()});\n    return {pageObj, list};\n}\n\nfunction addTodo({content, location, person, time, title, userId, status}) {\n    let ToDoList = AV.Object.extend('ToDoList');\n    let toDoList = new ToDoList();\n    toDoList.set('content', content);\n    toDoList.set('location', location);\n    toDoList.set('person', person);\n    toDoList.set('time', time);\n    toDoList.set('title', title);\n    toDoList.set('userId', userId);\n    toDoList.set('status', status);\n\n    return instance({method: toDoList.save()});\n}\n\nasync function getEventCount() {\n    let query = new AV.Query('ToDoList');\n    query.equalTo('status', 0);\n    let todoCount = await instance({method: query.count()});\n    query.equalTo('status', 1);\n    let completeCount = await instance({method: query.count()});\n    return {todoCount, completeCount};\n}\n\nfunction getEventDetail({eventId}) {\n    console.log('id', eventId);\n    let query = new AV.Query('ToDoList');\n    query.equalTo('objectId', eventId);\n    return instance({method: query.find()});\n}\n\nfunction completeEvent(eventId) {\n    let todo = AV.Object.createWithoutData('ToDoList', eventId);\n    todo.set('status', 1);\n    return instance({method: todo.save()});\n}\n\nfunction deleteEvent(eventId) {\n    let todo = AV.Object.createWithoutData('ToDoList', eventId);\n    return instance({method: todo.destroy()});\n} \n\nfunction logout() {\n    return instance({method: AV.User.logOut()});\n}\n\nexport default {\n    login,\n    getToDoList,\n    signup,\n    addTodo,\n    getEventCount,\n    getEventDetail,\n    completeEvent,\n    deleteEvent,\n    logout,\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport { Button, SearchBar, ListView, Modal } from 'antd-mobile';\nimport Util from '../../common/utils/util';\nimport Loading from '../../components/Loading/Loading';\nimport FixModalTouchBGScroll from '../../common/utils/fixModalTouchBGScroll';\n\nimport { setLoginStatus, updateToDoListInfo, setRefreshHome } from '../../redux/actions';\n\nimport './Home.scss';\nimport Account from '../../common/img/account.svg';\nimport Add from '../../common/img/add.svg';\nimport Api from '../../fetch/Api';\n\n\nclass Home extends Component {\n    constructor() {\n        super();\n        const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n        const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n        const dataSource = new ListView.DataSource({\n            getRowData,\n            getSectionHeaderData: getSectionData,\n            rowHasChanged: (row1, row2) => row1 !== row2,\n            sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n        });\n\n        this.state = {\n            dataSource,\n            modalVisible: false,\n        }\n    }\n    componentWillMount() {\n        FixModalTouchBGScroll();\n    }\n    async componentDidMount() {\n        this.setState({\n            dataSource: this.state.dataSource.cloneWithRowsAndSections(\n                {\n                    'S0, R0': \"S0, R0\",\n                    'Section 0': \"Section 0\"\n                }, \n                ['Section 0'], \n                [[\"S0, R0\"]]\n            ),\n        });\n        if(this.props.refreshHome) {\n            await this.props.dispatchToDoListInfo({ toDoList: [], totalPage: 1, pageNo: 1});\n            await this.getToDoList(1);\n            this.props.dispatchRefreshHome(false);\n        }\n    }\n    async getToDoList(pageNo) {\n        let {toDoList, searchTitle} = this.props.toDoListInfo;\n        let {userId} = JSON.parse(localStorage.getItem('userInfo'));\n        let res = await Api.getToDoList({userId, searchTitle, pageNo});\n        if(res) {\n            let {pageObj: {totalPage, pageNo}, list} = res;\n            list.forEach(item => {\n                let {id, attributes: {content, location, person, status, title, time, userId}} = item;\n                let createTime = Util.timeStampChangeDate(time);\n                let obj = Object.assign({}, {id, content, location, person, status, title, createTime, userId});\n                toDoList.push(obj);\n            });\n            this.props.dispatchToDoListInfo({toDoList, totalPage, pageNo, searchTitle});\n        }\n    }\n    skip(target, id) {\n        let path = `/${target}`;\n        if(target === 'detail' && id) {\n            path = `/${target}?id=${id}`;\n        }\n        this.props.history.push(path);\n    }\n    testModal() {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n    onClose() {\n        this.setState({\n            modalVisible: false,\n        });\n    }\n    async searchEvent(searchWord = undefined) {\n        if(searchWord) {\n            let {toDoListInfo} = this.props;\n            toDoListInfo.toDoList = [];\n            if(searchWord === 'clear') {\n                toDoListInfo.searchTitle = '';\n            } else {\n                toDoListInfo.searchTitle = searchWord;\n            }\n            await this.props.dispatchToDoListInfo(toDoListInfo);\n            await this.getToDoList(1);\n        }\n    }\n    onScrollHandle() {\n        // this.props.dispatchScrollY(this.lv.listviewRef.scrollProperties.offset);\n    }\n    renderSectionHeaderTemplate() {\n        return (\n            <Sticky>\n                {({ style }) => (\n                    <div className=\"sticky\" style={{ ...style, zIndex: 3}}>\n                        <div className='home-content-search'>\n                            <SearchBar ref={ref => this.autoFocusInst = ref} placeholder='请输入要搜索的 title' cancelText=' ' onClear={this.searchEvent.bind(this, 'clear')} onSubmit={this.searchEvent.bind(this)}/>\n                        </div>\n                    </div>\n                )}\n            </Sticky>\n        )\n    }\n    cardTemplate() {\n        return (\n        <div className='home-content-main'>\n            <div className='home-add' onClick={this.skip.bind(this, 'create')}>\n                <img src={Add} className='home-add-icon' alt='add' />\n            </div>\n            <div className='home-test' onClick={this.testModal.bind(this)}>\n                test\n            </div>\n            <div className='home-content-main-card' onClick={this.skip.bind(this, 'account')}>\n                <div className='home-content-main-card-avatar'>\n                    <img src={Account} className='home-content-main-card-avatar-icon' alt='logo' />\n                </div>\n                <div className='home-content-main-card-username'>{this.props.userInfo.username}</div>\n            </div>\n            <Modal\n                visible={this.state.modalVisible}\n                transparent\n                maskClosable={false}\n                onClose={this.onClose.bind(this)}\n                title='测试 Modal'\n                footer={[{ text: 'Ok', onPress: () => { this.onClose() } }]}\n            >\n                <div style={{ height: 100, overflow: 'scroll' }}>\n                    这是测试\n                </div>\n            </Modal>\n        </div>\n        ) \n    }\n    renderFooterTemplate() {\n        let {totalPage, pageNo} = this.props.toDoListInfo;\n        if (!totalPage || pageNo === totalPage) {\n            return (\n                <div className='home-footer no-data'>\n                    没有更多了\n                </div>\n            )\n        } else {\n            return (\n                <div className='home-footer'>\n                    <Loading />\n                </div>\n            )\n        }\n    }\n    renderRowTemplate(){\n        if(this.props.toDoListInfo && this.props.toDoListInfo.toDoList.length) {\n            return this.props.toDoListInfo.toDoList.map(item => {\n                return (\n                    <div className='home-content-list-item' key={item.id} onClick={this.skip.bind(this, 'detail', item.id)}>\n                        <div className='home-content-list-item-main'>\n                            <div className='home-content-list-item-main-title'>{item.title}</div>\n                            <div className='home-content-list-item-main-status' style={item.status ? {backgroundColor: '#00f'} : {backgroundColor: '#f00'}}></div>\n                        </div>\n                        <div className='home-content-list-item-basic'>\n                            <div className='home-content-list-item-basic-time'>{item.createTime}</div>\n                            <div className='home-content-list-item-basic-location'>{item.location}</div>\n                        </div>\n                    </div>\n                )\n            })\n        } else {         \n            return false;\n        }\n    }\n    onEndReached(){\n        let {totalPage, pageNo} = this.props.toDoListInfo;\n        if (pageNo === totalPage) {\n          return;\n        }\n        this.getToDoList(this.props.toDoListInfo.pageNo + 1);\n    }\n    render() {\n        return (\n            <ListView\n                ref={el => this.lv = el}\n                dataSource={this.state.dataSource}\n                className='am-list sticky-list home scroller'\n                renderSectionWrapper={(sectionID) => (<StickyContainer key={`${sectionID}`} className=\"sticky-container\" style={{ zIndex: 4 }} />)}\n                renderSectionHeader={this.renderSectionHeaderTemplate.bind(this)}\n                renderHeader={this.cardTemplate.bind(this)}\n                renderFooter={this.renderFooterTemplate.bind(this)}\n                renderRow={this.renderRowTemplate.bind(this)}\n                onScroll={this.onScrollHandle.bind(this)}\n                onEndReached={this.onEndReached.bind(this)}\n                pageSize={4}\n                scrollEventThrottle={200}\n                onEndReachedThreshold={100}\n                useBodyScroll\n            />\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    let {loginStatus, userInfo, toDoListInfo, refreshHome} = state;\n    return {\n        loginStatus,\n        userInfo,\n        toDoListInfo,\n        refreshHome,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatchLoginStatue: (status) => {\n            return dispatch(setLoginStatus(status));\n        },\n        dispatchToDoListInfo: (toDoListInfo) => {\n            return dispatch(updateToDoListInfo(toDoListInfo));\n        },\n        dispatchRefreshHome: (isRefresh) => {\n            return dispatch(setRefreshHome(isRefresh));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","function closest(el, selector) {\n    const matchesSelector =\n        el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector\n    while (el) {\n        if (matchesSelector.call(el, selector)) {\n            return el\n        }\n        el = el.parentElement\n    }\n    return null\n}\n\n/**\n * 修复antd-mobile Modal组件touch事件穿透\n * 需要滚动的地方请加class: 'scroller'\n * 参考代码:\n * https://mobile.ant.design/components/modal-cn/\n * http://www.zhangxinxu.com/study/201612/mobile-scroll-prevent-window-scroll.html\n */\n\nexport default function fixModal() {\n    let data = {\n        scroller: null,\n        posY: 0,\n        scrollY: 0,\n        maxscroll: 0\n    }\n\n    function isIosModalVisible() {\n        return (\n            /iPhone|iPod|iPad/i.test(navigator.userAgent) &&\n            document.body.style.overflow === 'hidden' &&\n            document.querySelectorAll('.am-modal').length > 0\n        )\n    }\n\n    document.body.addEventListener(\n        'touchstart',\n        function (e) {\n            if (!isIosModalVisible()) return\n\n            const scroller = closest(e.target, '.scroller')\n            if (!scroller) return\n\n            data.scroller = scroller\n            // 垂直位置标记\n            data.posY = e.touches[0].pageY\n            data.scrollY = scroller.scrollTop\n            // 是否可以滚动\n            data.maxscroll = scroller.scrollHeight - scroller.clientHeight\n        }, {\n            passive: false\n        }\n    )\n\n    document.body.addEventListener(\n        'touchmove',\n        function (e) {\n            if (!isIosModalVisible()) return\n\n            if (!data.scroller) {\n                return e.preventDefault()\n            }\n\n            const scrollTop = data.scroller.scrollTop\n            const distanceY = e.touches[0].pageY - data.posY\n\n            // 上下边缘检测\n            if (distanceY > 0 && scrollTop === 0) {\n                // 往上滑，并且到头\n                // 禁止滚动的默认行为\n                return e.preventDefault()\n            }\n\n            // 下边缘检测\n            if (distanceY < 0 && scrollTop + 1 >= data.maxscroll) {\n                // 往下滑，并且到头\n                // 禁止滚动的默认行为\n                return e.preventDefault()\n            }\n        }, {\n            passive: false\n        }\n    )\n\n    document.body.addEventListener(\n        'touchend',\n        function (e) {\n            if (!isIosModalVisible()) return\n            data.scroller = null\n            data.maxscroll = 0\n        }, {\n            passive: false\n        }\n    )\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { createForm } from 'rc-form';\n\n\nimport { Button, List, InputItem, Toast } from 'antd-mobile';\nimport Util from '../../common/utils/util';\nimport Loading from '../../components/Loading/Loading';\nimport { setLoginStatus, updateUserInfo } from '../../redux/actions';\nimport Logo from '../../common/img/logo.svg';\nimport Api from '../../fetch/Api';\n\n\nimport './Login.scss';\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {}\n    }\n    async login(type) {\n        this.props.form.validateFields(async (error, value) => {\n            if (error) {\n                Toast.fail('请填写完整信息', 1);\n                return;\n            };\n    \n            let {username, password} = value;\n            let method = type === 'login' ? 'login' : 'signup'\n            let res =  await Api[method]({username, password});\n            if(res) {\n                let {id: userId, attributes: {username}} = res;\n                this.props.dispatchUserInfo({...this.props.userInfo, userId, username});\n                localStorage.removeItem('userInfo');\n                localStorage.setItem('userInfo', JSON.stringify({userId, username, timer: Date.now()}));\n        \n                this.props.dispatchLoginStatue(true);\n                this.props.history.push('/');\n            }\n        });\n    }\n    render() {\n        const { getFieldProps } = this.props.form;\n        return (\n            <div className='login'>\n                <div className='login-logo-wrapper'>\n                    <img src={Logo} className='login-logo' alt='logo' />\n                </div>\n                <div className='login-form'>\n                    <List className='login-form-row'>\n                        <InputItem {...getFieldProps('username', {\n                                rules: [{\n                                    'required': true\n                                }]\n                            })} maxLength='10' placeholder='请输入用户名'></InputItem>\n                    </List>\n                    <List className='login-form-row'>\n                        <InputItem {...getFieldProps('password', {\n                                rules: [{\n                                    'required': true\n                                }]\n                            })} type='password' maxLength='16' placeholder='请输入密码'></InputItem>\n                    </List>\n                </div>\n                <div className='login-submit'>\n                    <Button className='submit-button submit-signup' activeClassName='submit-button-active' onClick={this.login.bind(this, 'signup')}>注册</Button>\n                    <Button className='submit-button submit-login' activeClassName='submit-button-active' onClick={this.login.bind(this, 'login')}>登录</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    let {loginStatus, userInfo} = state;\n    return {\n        loginStatus,\n        userInfo,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatchLoginStatue: (status) => {\n            return dispatch(setLoginStatus(status));\n        },\n        dispatchUserInfo: (userInfo) => {\n            return dispatch(updateUserInfo(userInfo))\n        },\n    }\n}\n\nexport default createForm()(connect(mapStateToProps, mapDispatchToProps)(Login));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport { Button, Toast } from 'antd-mobile';\nimport Util from '../../common/utils/util';\nimport Loading from '../../components/Loading/Loading';\nimport { setRefreshHome } from '../../redux/actions';\n\n\nimport './Detail.scss';\nimport Api from '../../fetch/Api';\nimport Back from '../../common/img/back.svg';\n\n\nclass Detail extends Component {\n    constructor() {\n        super();\n        this.state = {\n            eventId: '',\n            eventDetail: [],\n            title: '', \n            status: 0,\n        }\n    }\n    async componentDidMount() {\n        let eventId = window.location.href.split('?')[1].split('&')[0].split('=')[1];\n        let res = await Api.getEventDetail({eventId});\n        if(res) {\n            let {attributes: {content, location, person, status, time, title}, createdAt, updatedAt} = res[0];\n            let limitTime = Util.timeStampChangeDate(time);\n            let createTime = Util.timeStampChangeDate(Util.dateChangeTimeStamp(createdAt));\n            let updateTime = Util.timeStampChangeDate(Util.dateChangeTimeStamp(updatedAt));\n            let eventDetail = [\n                {title: '事件时间', content: limitTime},\n                {title: '事件地点', content: location},\n                {title: '相关人物', content: person},\n                {title: '事件状态', content: status ? '已完成' : '未完成'},\n                {title: '创建时间', content: createTime},\n                {title: '更新时间', content: updateTime},\n            ]\n            this.setState({title, status, eventDetail, eventId, content});\n        }\n    }\n    async completeEvent() {\n        let res = await Api.completeEvent(this.state.eventId);\n        if(res) {\n            Toast.success('恭喜！事件已完成！', 2);\n            await this.props.dispatchRefreshHome(true);\n            this.goBackToHome();\n        }\n    }\n    async deleteEvent() {\n        let res = await Api.deleteEvent(this.state.eventId);\n        if(res) {\n            Toast.success('事件已删除！', 1);\n            await this.props.dispatchRefreshHome(true);\n            this.goBackToHome();\n        }\n    }\n    goBackToHome() {\n        this.props.history.push('/');\n    }\n    render() {\n        return (\n            <div className='detail'>\n                <div className='detail-header'>\n                    <div className='detail-header-back' onClick={this.goBackToHome.bind(this)}>\n                        <img src={Back} className='detail-header-back-icon' alt='back' />\n                    </div>\n                    <div className='detail-header-title'>{this.state.title}</div>\n                </div>\n\n                <div className='detail-content'>\n                    {this.state.eventDetail.map(item => (\n                        <div className='detail-content-item' key={item.title}>\n                            <div className='detail-content-item-title'>{item.title}</div>\n                            <div className='detail-content-item-text'>{item.content}</div>\n                        </div>\n                    ))}\n                    <div className='detail-content-text'>{this.state.content}</div>\n                </div>\n\n                \n                <div className='detail-action'>\n                    {this.state.status ? '' : <Button className='detail-action-complete' onClick={this.completeEvent.bind(this)}>完成</Button>}\n                    <Button className='detail-action-delete' onClick={this.deleteEvent.bind(this)}>删除</Button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    let {refreshHome} = state;\n    return {\n        refreshHome,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatchRefreshHome: (isRefresh) => {\n            return dispatch(setRefreshHome(isRefresh));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport { Button, SearchBar, ListView, Modal } from 'antd-mobile';\nimport Util from '../../common/utils/util';\nimport Loading from '../../components/Loading/Loading';\nimport { setLoginStatus, setRefreshHome } from '../../redux/actions';\n\n\nimport './Account.scss';\nimport Avatar from '../../common/img/logo.svg';\nimport Api from '../../fetch/Api';\n\n\nclass Account extends Component {\n    constructor() {\n        super();\n        this.state = {\n            logoutStatus: false,\n        }\n    }\n    goBackToHome() {\n        this.props.history.push('/');\n    }\n    async logout() {\n        this.setState({logoutStatus: true});\n        let res = await Api.logout();\n        if(res) {\n            localStorage.removeItem('userInfo');\n\n            this.props.dispatchLoginStatue(false);\n            this.props.dispatchRefreshHome(true);\n            this.props.history.push('/login');\n        }\n        this.setState({logoutStatus: false});\n\n    }\n    async componentDidMount() {\n        let res = await Api.getEventCount();\n        if(res) {\n            let {todoCount, completeCount} = res;\n            this.setState({todoCount, completeCount});\n        }\n    }\n    render() {\n        return (\n            <div className='account'>\n                <div className='account-main'>\n                    <div className='account-main-avatar'>\n                        <img src={Avatar} className='account-main-avatar-icon' alt='logo' />\n                    </div>\n                    <div className='home-content-account-main-username'>{this.props.userInfo.username}</div>\n                </div>\n                <div className='account-content'>\n                    <div className='account-content-item'>\n                        <div className='account-content-item-title'>未完成事件数：</div>\n                        <div className='account-content-item-number'>{this.state.todoCount}</div>\n                    </div>\n                    <div className='account-content-item'>\n                        <div className='account-content-item-title'>已完成事件数：</div>\n                        <div className='account-content-item-number'>{this.state.completeCount}</div>\n                    </div>\n                </div>\n\n                <div className='account-action'>\n                    <Button className='account-action-back' onClick={this.goBackToHome.bind(this)}>返回首页</Button>\n                    <Button className='account-action-logout' disabled={this.state.logoutStatus} onClick={this.logout.bind(this)}>退出登录</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    let {userInfo, toDoListInfo} = state;\n    return {\n        userInfo,\n        toDoListInfo,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatchLoginStatue: (status) => {\n            return dispatch(setLoginStatus(status));\n        },\n        dispatchRefreshHome: (isRefresh) => {\n            return dispatch(setRefreshHome(isRefresh));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { createForm } from 'rc-form';\n\n\nimport { Button, List, InputItem, TextareaItem, DatePicker, Toast } from 'antd-mobile';\nimport Util from '../../common/utils/util';\nimport Loading from '../../components/Loading/Loading';\nimport Title from '../../common/img/title.svg';\nimport Person from '../../common/img/person.svg';\nimport Time from '../../common/img/time.svg';\nimport Place from '../../common/img/location.svg';\nimport Back from '../../common/img/back.svg';\nimport Api from '../../fetch/Api';\nimport { setRefreshHome } from '../../redux/actions';\n\nimport './Create.scss';\n\nclass Create extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pageLoading: false,\n        }\n        console.log(this.props);\n    }\n    goBackToHome() {\n        this.props.history.push('/');\n    }\n    async addTodo() {\n        this.props.form.validateFields(async (error, value) => {\n            if (error) {\n                Toast.fail('请填写完整信息', 1);\n                return;\n            };\n            this.setState({\n                pageLoading: true,\n            });\n\n            let {userId} = this.props.userInfo;\n            let {content, location, person, time: UTCTime, title} = value;\n            let time = Util.dateChangeTimeStamp(UTCTime);\n            let res = await Api.addTodo({content, location, person, time, title, userId, status: 0});\n            if(res) {\n                await this.props.dispatchRefreshHome(true);\n                this.setState({\n                    pageLoading: false,\n                });\n                this.props.history.push('/');\n            }\n        });\n    }\n    pageLoadingTemplate() {\n        if(this.state.pageLoading) {\n            return (\n                <div className='page-loading'>\n                    <Loading />\n                </div>\n            )\n        }\n        return false;\n    }\n    render() {\n        const { getFieldProps } = this.props.form;\n        return (\n            <div className='create'>\n                <div className='create-header'>\n                    <div className='create-header-back' onClick={this.goBackToHome.bind(this)}>\n                        <img src={Back} className='create-header-back-icon' alt='back' />\n                    </div>\n                    <div className='create-header-title'>添加待办</div>\n                </div>\n                <List className='create-row'>\n                    <InputItem {...getFieldProps('title', {\n                            rules: [{\n                                'required': true,\n                            }]\n                        })}><div className='create-row-label'><img src={Title} className='create-row-label-icon' alt='title' />标题</div></InputItem>\n                </List>\n\n                <List className='create-row'>\n                    <InputItem {...getFieldProps('person', {\n                            rules: [{\n                                'required': true,\n                            }]\n                        })}><div className='create-row-label'><img src={Person} className='create-row-label-icon' alt='person' />人物</div></InputItem>\n                </List>\n\n                <List className='create-row create-row-time'>\n                    <DatePicker\n                        {...getFieldProps('time', {\n                        rules: [\n                            { required: true },\n                        ],\n                        })}\n                    >\n                        <List.Item arrow=\"horizontal\"><div className='create-row-label'><img src={Time} className='create-row-label-icon' alt='time' />时间</div></List.Item>\n                    </DatePicker>\n                </List>\n\n                <List className='create-row'>\n                    <InputItem {...getFieldProps('location', {\n                            rules: [{\n                                'required': true,\n                            }]\n                        })}><div className='create-row-label'><img src={Place} className='create-row-label-icon' alt='location' />地点</div></InputItem>\n                </List>\n\n                <List className='create-row create-row-content'>\n                    <TextareaItem\n                        {...getFieldProps('content', {\n                            rules: [{\n                                'required': true,\n                            }]\n                        })}\n                        rows={5}\n                        count={100}\n                    />\n                </List>\n                <div className='create-add-todo'>\n                    <Button className='submit-button' activeClassName='submit-button-active' onClick={this.addTodo.bind(this)}>添加</Button>\n                </div>\n\n                {this.pageLoadingTemplate()}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    let {userInfo} = state;\n    return {\n        userInfo,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        dispatchRefreshHome: (isRefresh) => {\n            return dispatch(setRefreshHome(isRefresh));\n        }\n    }\n}\n\nexport default createForm()(connect(mapStateToProps, mapDispatchToProps)(Create));","import Home from '../pages/Home/Home';\nimport Login from '../pages/Login/Login';\nimport Detail from '../pages/Detail/Detail';\nimport Account from '../pages/Account/Account';\nimport Create from '../pages/Create/Create';\nimport Error from '../pages/Error/Error';\n\nexport const routerConfig = [\n    {\n        path: '/',\n        component: Home,\n        auth: true,\n    }, {\n        path: '/login',\n        component: Login,\n    }, {\n        path: '/detail',\n        component: Detail,\n        auth: true,\n    }, {\n        path: '/error',\n        component: Error,\n    }, {\n        path: '/account',\n        component: Account,\n        auth: true,\n    },\n    {\n        path: '/create',\n        component: Create,\n        auth: true,\n    }\n];","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport { Button, SearchBar, ListView, Modal } from 'antd-mobile';\nimport Util from '../../common/utils/util';\nimport Loading from '../../components/Loading/Loading';\n\nimport './Error.scss';\nimport ErrorIcon from '../../common/img/404.svg';\n\n\nclass Error extends Component {\n    constructor() {\n        super();\n        this.state = {}\n    }\n    goBackToHome() {\n        this.props.history.push('/');\n    }\n    render() {\n        return (\n            <div className=\"error\">\n                <img src={ErrorIcon} className='error-icon' alt='404' />\n                <div className='error-tip'>404！抱歉，您查看的页面不存在～～</div>           \n            </div>\n        )\n    }\n}\n\nexport default Error;","import React, { Component } from 'react'\nimport { Switch, BrowserRouter } from 'react-router-dom';\n\nimport Routes from './router'\nimport { routerConfig } from './router.config';\n\nclass Routers extends Component {\n    render(){\n        return(\n            <BrowserRouter>\n                <Switch>\n                    <Routes config={routerConfig} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Routers;","import React, { Component } from 'react';\n\nimport Routers from './routers/index';\n\n\nimport './App.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Routers />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_LOGIN_STATUS, UPDATE_USER_INFO, UPDATE_TO_DO_LIST_INFO, SET_REFRESH_HOME } from './actionTypes';\n\nconst userInfo = JSON.parse(window.localStorage.getItem('userInfo')) || {};\nlet {userId} = userInfo;\n\nlet initState = {\n    loginStatus: userId ? true : false,\n    userInfo,\n    toDoListInfo: {\n        toDoList: [],\n        totalPage: 1,\n        pageNo: 1,\n        searchTitle: undefined,\n    },\n    refreshHome: true,\n}\n\nexport default (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_LOGIN_STATUS:\n            return {\n                ...state,\n                loginStatus: payload\n            }\n        case UPDATE_USER_INFO:\n            return {\n                ...state,\n                userInfo: payload,\n            }\n        case UPDATE_TO_DO_LIST_INFO: \n            return {\n                ...state,\n                toDoListInfo: payload,\n            }\n        case SET_REFRESH_HOME: \n            return {\n                ...state,\n                refreshHome: payload,\n            }\n        default:\n            return state\n    }\n}","import { createStore } from 'redux';\n\nimport reducers from './reducers'\n\nconst store = createStore(reducers);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.10995d31.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.d42052db.svg\";"],"sourceRoot":""}